trigger:
  branches:
    include:
      - master
      - main
  paths:
    include:
      - 'Backendapi/**'
      - '**/*.sln'
      - '**/*.csproj'

pool:
  vmImage: 'windows-latest'

variables:
  # Build variables
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetVersion: '8.0.x'
  
  # Application settings
  Jwt__Issuer: 'https://webappnamenewproject-byb2fqbqhha5efab.centralindia-01.azurewebsites.net'
  Jwt__Audience: 'https://proud-plant-0cd1a3400.6.azurestaticapps.net'
  ApiSettings__FrontendUrl: 'https://proud-plant-0cd1a3400.6.azurestaticapps.net'
  ASPNETCORE_ENVIRONMENT: 'Production'

  # Azure Web App settings
  azureWebAppName: 'webappnamenewproject'
  azureWebAppPackagePath: '$(Build.ArtifactStagingDirectory)/**/*.zip'

steps:
- task: DotNetCoreInstaller@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: '$(dotnetVersion)'

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect:"Code Coverage"'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    reportDirectory: '$(Agent.TempDirectory)/**/CodeCoverage'

- task: DotNetCoreCLI@2
  displayName: 'Publish to Azure Web App'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: AzureWebApp@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: 'serviceconnectionname'  # Replace with your subscription name
    appName: '$(azureWebAppName)'
    package: '$(azureWebAppPackagePath)'
    appType: 'webApp'
    deploymentMethod: 'auto'
    

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'